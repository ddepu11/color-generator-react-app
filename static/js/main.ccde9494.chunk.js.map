{"version":3,"sources":["components/Header.jsx","components/Colors.jsx","App.js","index.js"],"names":["Header","setColor","color","handleSubmit","error","className","onSubmit","type","placeholder","value","onChange","name","Colors","item","useState","copied","setCopied","weight","hex","rgb","textColor","trim","style","backgroundColor","onClick","navigator","clipboard","writeText","then","setTimeout","App","colors","setColors","loading","setLoading","setError","getShadesAndTints","c","shadesAndTints","Values","all","console","log","useEffect","e","newColor","target","preventDefault","map","index","ReactDOM","render","document","getElementById"],"mappings":"0OAmBeA,EAnBA,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,SAAUC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,aAAcC,EAAY,EAAZA,MAC/C,OACE,yBAAQC,UAAU,cAAlB,UACE,2EACA,uBAAMC,SAAUH,EAAhB,UACE,uBACEE,UAAWD,EAAQ,QAAU,GAC7BG,KAAK,OACLC,YAAY,UACZC,MAAOP,EACPQ,SAAUT,EACVU,KAAK,UAEP,wBAAQJ,KAAK,SAAb,6BCqBOK,EAhCA,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EACCC,oBAAS,GADV,mBACpBC,EADoB,KACZC,EADY,KAEnBT,EAA2BM,EAA3BN,KAAMU,EAAqBJ,EAArBI,OAAaC,GAAQL,EAAbM,IAAaN,EAARK,KAEvBE,EAAY,GAMhB,MAJoB,SAAhBb,EAAKc,SACPD,EAAY,QAIZ,sBACEf,UAAU,QACViB,MAAO,CACLC,gBAAgB,IAAD,OAAML,GACrBhB,MAAM,GAAD,OAAKkB,IAEZI,QAAS,WACPC,UAAUC,UAAUC,UAApB,WAAkCT,IAAOU,MAAK,WAC5CZ,GAAU,GACVa,YAAW,kBAAMb,GAAU,KAAQ,SATzC,UAaE,+BAAKC,EAAL,OAEA,mCAAMC,KACLH,EAAS,wDAAiC,OC6BlCe,MApDf,WAAgB,IAAD,EACehB,mBAAS,IADxB,mBACNiB,EADM,KACEC,EADF,OAEalB,mBAAS,IAFtB,mBAENZ,EAFM,KAECD,EAFD,OAGiBa,oBAAS,GAH1B,mBAGNmB,EAHM,KAGGC,EAHH,OAIapB,oBAAS,GAJtB,mBAINV,EAJM,KAIC+B,EAJD,KAUPC,EAAoB,WACxB,IAAIC,EAAc,OAAVnC,GAA4B,KAAVA,EAAe,UAAYA,EACrD,IACE,IAAMoC,EAAiB,IAAIC,IAAOF,GAClCL,EAAUM,EAAeE,OACzBL,GAAS,GACT,MAAO/B,GACPqC,QAAQC,IAAItC,GACZ+B,GAAS,GAGXD,GAAW,IAYb,OALAS,qBAAU,WACRP,MACC,IAID,sBAAK/B,UAAU,YAAf,UACE,cAAC,EAAD,CACED,MAAOA,EACPH,SA/BN,SAAsB2C,GACpB,IAAMC,EAAWD,EAAEE,OAAOrC,MAAMY,OAChCpB,EAAS4C,IA8BL1C,aAdN,SAAsByC,GACpBA,EAAEG,iBACFX,KAaIlC,MAAOA,IAET,+BACG+B,EACC,4CAEAF,EAAOiB,KAAI,SAACnC,EAAMoC,GAAP,OAAiB,cAAC,EAAD,CAAmBpC,KAAMA,GAAboC,YC/ClDC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ccde9494.chunk.js","sourcesContent":["const Header = ({ setColor, color, handleSubmit, error }) => {\r\n  return (\r\n    <header className=\"header flex\">\r\n      <h1>Get Different Shades And Tints Of A Color</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          className={error ? \"error\" : \"\"}\r\n          type=\"text\"\r\n          placeholder=\"#7868e6\"\r\n          value={color}\r\n          onChange={setColor}\r\n          name=\"color\"\r\n        />\r\n        <button type=\"submit\">Generate</button>\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { useState } from \"react\";\r\n\r\nconst Colors = ({ item }) => {\r\n  const [copied, setCopied] = useState(false);\r\n  const { type, weight, rgb, hex } = item;\r\n\r\n  let textColor = \"\";\r\n\r\n  if (type.trim() === \"tint\") {\r\n    textColor = \"#333\";\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"color\"\r\n      style={{\r\n        backgroundColor: `#${hex}`,\r\n        color: `${textColor}`,\r\n      }}\r\n      onClick={() => {\r\n        navigator.clipboard.writeText(`#${hex}`).then(() => {\r\n          setCopied(true);\r\n          setTimeout(() => setCopied(false), 3000);\r\n        });\r\n      }}\r\n    >\r\n      <h3>{weight}%</h3>\r\n\r\n      <h4>#{hex}</h4>\r\n      {copied ? <p>Copied to the clipboard</p> : \"\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Colors;\r\n","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Values from \"values.js\";\nimport Header from \"./components/Header\";\nimport Color from \"./components/Colors\";\n\nfunction App() {\n  const [colors, setColors] = useState([]);\n  const [color, setColor] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  function handleChange(e) {\n    const newColor = e.target.value.trim();\n    setColor(newColor);\n  }\n  const getShadesAndTints = () => {\n    let c = color === null || color === \"\" ? \"#7868e6\" : color;\n    try {\n      const shadesAndTints = new Values(c);\n      setColors(shadesAndTints.all());\n      setError(false);\n    } catch (error) {\n      console.log(error);\n      setError(true);\n    }\n\n    setLoading(false);\n  };\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    getShadesAndTints();\n  }\n  useEffect(() => {\n    getShadesAndTints();\n  }, []);\n\n  // console.log(colors);\n  return (\n    <div className=\"container\">\n      <Header\n        error={error}\n        setColor={handleChange}\n        handleSubmit={handleSubmit}\n        color={color}\n      />\n      <main>\n        {loading ? (\n          <h2>Loading...</h2>\n        ) : (\n          colors.map((item, index) => <Color key={index} item={item} />)\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}